<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-08-19T12:46:18-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Vince Nguyen</title><subtitle>Powered by Jekyll and GitHub Pages</subtitle><author><name>Paul Le</name></author><entry><title type="html">Project 1: NBA Betting Model</title><link href="http://localhost:4000/p1-nba-prediction-model" rel="alternate" type="text/html" title="Project 1: NBA Betting Model" /><published>2025-08-04T00:00:00-07:00</published><updated>2025-08-04T00:00:00-07:00</updated><id>http://localhost:4000/p1-nba-prediction-model</id><content type="html" xml:base="http://localhost:4000/p1-nba-prediction-model"><![CDATA[<h2 id="about">About</h2>

<p>Ever since I was a kid, basketball has been ingrained into my life in some way, shape, or form. From shooting in the backyard with a deflated ball and a hoop I begged my parents to buy off Craigslist in 5th grade to buying last-minute nosebleed seats ($25!) to see Curry face off against LeBron in college, basketball has always been important to me. Despite this, there was one thing that I wasn’t involved in that took the sports world by storm in 2018 after the Professional and Amateur Sports Protection Act (PASPA) was foregone by the Supreme Court: sports betting.</p>

<p>“Look at this parlay I just made,” my friends would tell me as they showed me a list of what seemed to be, in my mind, some <em>terrible</em> sports takes on their phone. Jayson Tatum scoring more than 25.5 against the No.1 Defensive Rating team in the NBA? Give me a break. Brooke Lopez grabbing over 6 boards against a team full of bigs? Sorry Brooke, you’re not really the center you used to be. All these parlays being build around “feasible” numbers and predictions based on “hunches” lead me to a lingering question: can’t you reliably predict these plays based on the statistics? The NBA is extremely meticulous when keeping track of stats for players, so much so that some of the statistics are frustratingly obscure. You’ll see on screen things like “Only Player to Score 30+ Points While Coming Off an Ankle Sprain After 3 Weeks” (Okay, it’s not <em>that</em> bad but you get the picture).</p>

<p>Come post-grad, I’m furiously applying for jobs in the tech market. I landed an interview for an internship at a startup that focuses on beating the market when it comes to sports betting. Without going too much into detail, they use their proprietery models to predict which bets were worth taking and which were too risky to build your parlay around. While I made it to the final round, my journey decided that I was to take another route (I was rejected). Slightly down, yet inspired, I decided to take my own step towards something similar with this personal project. I was going to build my own rudimentary sports betting model to help me beat the market.</p>

<h2 id="my-toolbox">My Toolbox</h2>

<p>It’s no doubt that I need to have the correct tools to help me complete the project. More as to how I used the tools later in the post, but I’ve initially decided on using <strong>Python</strong> with <strong>pandas</strong> to help me manipulate datasets from the <strong>NBA API</strong>. I’m also using <strong>Scikit-learn</strong> (sklearn) to help calculate my multiple linear regression.</p>

<h2 id="finding-the-correct-model">Finding the Correct Model</h2>

<p>It’s been a few years since I’ve taken my undergraduate introductory statistics and probabilities course, so I decided to go back and read up on simpler models that I could intially use to get my feet off the ground. I remember using Simple and Mulitple Linear Regressions in my statistics course and did more review there. It seemed easy enough, right?</p>

<p>My initial plan was to find a dependent variable (Y), like the amount of points predicted to score, based off an independent variable (X), like a player’s average Points Per Game (PPG) against the team they’re supposed to play against. A textbook Simple Linear Regression. It wasn’t until I was cleaning data when I realized that a team <em>only</em> plays against another team 2-4 times <strong>per season</strong>. That’s not nearly enough data to accurately create a model that predicts a player’s PPG. Quite frankly, that felt like I didn’t have any data at all. Furthermore, I took a step back and realized that there were way more variables I had to take into account for my model to be <em>remotely</em> accurate. Things like their Field Gold Percentage (FGP), Minutes Per Game (MPG), if they were previously injured, their current scoring streak (Have they been on a hot streak within the past 5 games?), rest days, home or away, etc. These different considerations lead me to realize that I need to move to a Multiple Linear Regression Model so that I can use multiple independent variables to find my dependent variable. Below is my initial and current code to</p>]]></content><author><name>Vince Nguyen</name></author><summary type="html"><![CDATA[About]]></summary></entry><entry><title type="html">Introduction</title><link href="http://localhost:4000/introduction" rel="alternate" type="text/html" title="Introduction" /><published>2025-08-01T05:30:00-07:00</published><updated>2025-08-01T05:30:00-07:00</updated><id>http://localhost:4000/introduction</id><content type="html" xml:base="http://localhost:4000/introduction"><![CDATA[<h1 id="introduction">Introduction</h1>

<p>Hi there!</p>

<p>My name is Vince Nguyen and I’m a recent graduate from the University of California, Berkeley (Spring 2024). I majored in Environmental Economics and Policy but didn’t find a passion for software development until much later in my college career when it was too late to switch, but that’s okay! Everyone’s journey is different, or so I’ve been told.</p>

<p>Quite frankly, I didn’t know what I was doing when I first entered university. I saw it more as an escape from my current life than a way to pave my future. I was out exploring, doing everything that seemed interesting. Finding my family with Cal Dragon Boat, an amateur sports club on campus, I was inevitably influneced by the friends I made. Everywhere I looked, it seemed like everyone was somehow deeply ingrained in technology, teammates and classmates alike. I couldn’t help but want to be a part of it, so I decided to take the infamous CS 61A: Strucuture and Interpretation of Computer Programs course. Everyone told me it was a staple class and that I NEEDED to take it for the true Berkeley experience. I couldn’t have possibly imagined where this incredible challinging course would’ve taken me. That course truly taught me how to think programmatically, something I never had experience with until that Spring. Because what do you mean “print(“Hello World!”) doesn’t return any value? It’s right there in the terminal! Regardless, I found myself entranced (and unimaginably frustrated!) with solving problems in ways that I would’ve never imagined, leaving me hungry for more.</p>

<p>I found myself interning at a Y Combinator startup, Sonnet AI, the following summer and learned everything that the startup space had to offer. The incredible people I’ve met and worked with left an unfathomable impact on me and what I wanted to do. Coding seemed like their native language and I was just a baby learning how to speak. Despite this, I loved the fast-paced environment and the standup meetings that kept us on track. I enjoyed learning and seeing my work have a direct impact on the product as soon as it was pushed to production. Though I was writing what seemed to be an insignificant part of the product, I felt like I was contributing towards something bigger than myself, something that would help society progress in the right direction. Though I may be romanticizing, that summer left me with something that hasn’t been diminished: passion and drive.</p>

<p>Although I’m still at a disadvantage starting so late in my career (no CS degree), I’m still taking a chance on myself. To enter the tech industry would be a long shot but I believe that I have what it takes to make it. Berkeley was my reach school afterall and look where I ended up. I’m driven and excited to see how my journey will prgoress in the forthcoming months. This website and log are something I’m going to use to track my personal projects and growth. There’s a quote by Fabienne Fredrickson that I’ve resonated with this year that I’ve truly taken to heart in everything I do. It’s a constant reminder that I need to be patient.</p>

<blockquote>
  <p>“The day you plant the seed is not the day you eat the fruit.”</p>
</blockquote>

<p>See you at the end of the tunnel. Go Bears! C:</p>

<p>-V</p>]]></content><author><name>Paul Le</name></author><summary type="html"><![CDATA[Introduction]]></summary></entry></feed>